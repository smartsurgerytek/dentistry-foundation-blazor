@page "/AuditLog"
@inject IHttpClientFactory HttpClientFactory
@inherits FoundationComponentBase

<h3>@L["AuditLog"]</h3>

<SfGrid DataSource="@AuditLogDtos" @ref="AuditLogDtoGrid" AllowPaging="true" AllowSorting="true" Toolbar="@Toolbaritems">
    <GridEvents OnToolbarClick="OnToolbarClick" TValue="AuditLogDto"></GridEvents>
    <GridColumns>
        <GridColumn Field="Id" HeaderText="ID" IsPrimaryKey="true" Visible="false"></GridColumn>
        <GridColumn Field="UserName" HeaderText="@L["UserName"]" Width="200"></GridColumn>
        <GridColumn Field="ServiceName" HeaderText="@L["ServiceName"]" Width="200"></GridColumn>
        <GridColumn Field="MethodName" HeaderText="@L["MethodName"]" Width="200"></GridColumn>
        <GridColumn Field="Parameters" HeaderText="@L["Parameters"]" Width="200"></GridColumn>
        <GridColumn Field="ExecutionTime" HeaderText="@L["ExecutionTime"]" Width="180" Format="yMd h:mm:ss"></GridColumn>
        <GridColumn Field="ExecutionDuration" HeaderText="@L["ExecutionDuration"]" Width="150"></GridColumn>
    </GridColumns>
</SfGrid>



@code {

    private SfGrid<AuditLogDto> AuditLogDtoGrid;
    private List<AuditLogDto> AuditLogDtos = new();
    private List<ItemModel> Toolbaritems = new();
    protected override async Task OnInitializedAsync()
    {
        await LoadAuditLogs();
        Toolbaritems.Add(new ItemModel() { Text = "Refresh"});
    }

    private async Task LoadAuditLogs()
    {        
        AuditLogDtos = await HttpClientFactory.CreateClient("ApiClient").GetFromJsonAsync<List<AuditLogDto>>("/api/app/audit-log-app-services/audit-log");
    }

    private async Task OnToolbarClick(Syncfusion.Blazor.Navigations.ClickEventArgs args)
    {        
        if (args.Item.Text == "Refresh")
        {
            await LoadAuditLogs();
        }
    }
}
